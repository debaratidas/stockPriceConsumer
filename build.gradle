plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.stockprice.consumer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

sourceSets {
	testInteg {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/testInteg/java')
		}
		resources.srcDir file('src/testInteg/resources')
	}
}

configurations {
	testIntegCompile.extendsFrom testCompile
	testIntegCompile.extendsFrom  testImplementation
	testIntegRuntime.extendsFrom testRuntime
}

task testInteg(type: Test) {
	testClassesDirs = sourceSets.testInteg.output.classesDirs
	classpath = sourceSets.testInteg.runtimeClasspath
}


repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "Hoxton.RC2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
	testImplementation 'org.springframework.security:spring-security-test'
	testCompile 'io.cucumber:cucumber-java8:4.7.4'
	testCompile 'io.cucumber:cucumber-junit:4.7.4'
	testCompile 'io.cucumber:cucumber-spring:4.7.4'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

check.dependsOn testInteg
testInteg.mustRunAfter test


